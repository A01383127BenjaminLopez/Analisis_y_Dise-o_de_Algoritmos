// Benjamín Guillermo López Salinas A01383127

#include<iostream>
#include <list>

using namespace std;

class Graph
{
	int V; //Numero de Vertices

	list<int> *adj;
public:
	Graph(int V); 

	// funcion para agregar ejes
	void addEdge(int v, int w);

	//Para imprimir BFS desde la Raiz dada
	void BFS(int s);
};

Graph::Graph(int V)
{
	this->V = V;
	adj = new list<int>[V];
}

void Graph::addEdge(int v, int w)
{
	adj[v].push_back(w);
}

void Graph::BFS(int s)
{
	//Vertices visitados y no visitados
	bool *visited = new bool[V];
	for(int i = 0; i < V; i++)
		visited[i] = false;

	// Se crea una lista para el BFS
	list<int> queue;

	// Enlistar Nodos Visitados
	visited[s] = true;
	queue.push_back(s);

//identificar vertices adyacentes
	list<int>::iterator i;

	while(!queue.empty())
	{
		// Sacar de la lista e imprimir
		s = queue.front();
		cout << s << " ";
		queue.pop_front();

		for (i = adj[s].begin(); i != adj[s].end(); ++i)
		{
			if (!visited[*i])
			{
				visited[*i] = true;
				queue.push_back(*i);
			}
		}
	}
}

//main program
int main()
{
	//Creamos el grafo
	Graph g(29);//Numero de nodos=28 (29 ---> 0 al 28)

  g.addEdge(1, 2);
  g.addEdge(1, 8);

  g.addEdge(2, 1);
  g.addEdge(2, 3);
  g.addEdge(2, 5); 

  g.addEdge(3, 2);
  g.addEdge(3, 4);
  g.addEdge(3, 5);

  g.addEdge(4, 3);
  g.addEdge(4, 6);

  g.addEdge(5, 2);
  g.addEdge(5, 3);
  g.addEdge(5, 6);
  g.addEdge(5, 9);

  g.addEdge(6, 4);
  g.addEdge(6, 5);
  g.addEdge(6, 7);
  g.addEdge(6, 13);

  g.addEdge(7, 6);
  g.addEdge(7, 14);
  g.addEdge(7, 20);

  g.addEdge(8, 1);
  g.addEdge(8, 19);
  g.addEdge(8, 11);

  g.addEdge(9, 5);
  g.addEdge(9, 10);
  g.addEdge(9, 11);

  g.addEdge(10, 9);
  g.addEdge(10, 12);
  g.addEdge(10, 13);

  g.addEdge(11, 9);
  g.addEdge(11, 8);
  g.addEdge(11, 15);
  g.addEdge(11, 12);

  g.addEdge(12, 10);
  g.addEdge(12, 11);
  g.addEdge(12, 16);
  g.addEdge(12, 17);

  g.addEdge(13, 14);
  g.addEdge(13, 10);
  g.addEdge(13, 6);
  g.addEdge(13, 18);

  g.addEdge(14, 13);
  g.addEdge(14, 7);
  g.addEdge(14, 18);
  g.addEdge(14, 20);

  g.addEdge(15, 16);
  g.addEdge(15, 19);
  g.addEdge(15, 11);
  g.addEdge(15, 21);

  g.addEdge(16, 15);
  g.addEdge(16, 12);
  g.addEdge(16, 17);
  g.addEdge(16, 22);

  g.addEdge(17, 16);
  g.addEdge(17, 12);
  g.addEdge(17, 22);
  g.addEdge(17, 18);

  g.addEdge(18, 17);
  g.addEdge(18, 14);
  g.addEdge(18, 13);
  g.addEdge(18, 23);

  g.addEdge(19, 8);
  g.addEdge(19, 15);
  g.addEdge(19, 21);
  g.addEdge(19, 25);

  g.addEdge(20, 7);
  g.addEdge(20, 14);
  g.addEdge(20, 23);

  g.addEdge(21, 19);
  g.addEdge(21, 15);
  g.addEdge(21, 22);
  g.addEdge(21, 26);

  g.addEdge(22, 21);
  g.addEdge(22, 16);
  g.addEdge(22, 17);
  g.addEdge(22, 23);
  g.addEdge(22, 24);
  g.addEdge(22, 27);

  g.addEdge(23, 22);
  g.addEdge(23, 18);
  g.addEdge(23, 20);
  g.addEdge(23, 24);

  g.addEdge(24, 22);
  g.addEdge(24, 23);
  g.addEdge(24, 28);

  g.addEdge(25, 19);
  g.addEdge(25, 26);

  g.addEdge(26, 25);
  g.addEdge(26, 27);
  g.addEdge(26, 21);

  g.addEdge(27, 22);
  g.addEdge(27, 26);
  g.addEdge(27, 28);

  g.addEdge(28, 24);
  g.addEdge(28, 27);

	cout << "Se muestran Resultados de Breadth First Traversal "<<endl;
  cout << "Comenzando por el Nodo <<El Rosario>> "<<endl;
	g.BFS(1);
  cout<<endl<<endl;
  cout<<"EQUIVALENCIAS:"<<endl;
  cout<<"1. EL ROSARIO"<<endl;
  cout<<"2. Instituto del Petroleo"<<endl;
  cout<<"3. Deportivo 18 de Marzo"<<endl;
  cout<<"4. Martín Carrera"<<endl;
  cout<<"5. La Raza"<<endl;
  cout<<"6. Consulado"<<endl;
  cout<<"7. Oceanía"<<endl;
  cout<<"8. Tacuba"<<endl;
  cout<<"9. Guerrero"<<endl;
  cout<<"10. Garibaldi"<<endl;
  cout<<"11. Hidalgo"<<endl;
  cout<<"12. Bellas Artes"<<endl;
  cout<<"13. Morelos"<<endl;
  cout<<"14. San Lazaro"<<endl;
  cout<<"15. Balderas"<<endl;
  cout<<"16. Salto del Agua"<<endl;
  cout<<"17. Pino Suarez"<<endl;
  cout<<"18. Candelaria"<<endl;
  cout<<"19. Tacubaya"<<endl;
  cout<<"20. Pantitlan"<<endl;
  cout<<"21. Centro Medico"<<endl;
  cout<<"22. Chabacano"<<endl;
  cout<<"23. Jamaica"<<endl;
  cout<<"24. Santa Anita"<<endl;
  cout<<"25. Mixcoac"<<endl;
  cout<<"26. Zapata"<<endl;
  cout<<"27. Ermita"<<endl;
  cout<<"28. Atlalilco"<<endl;
	return 0;
}

